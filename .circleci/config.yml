version: 2
jobs:
  build:
    working_directory: ~/RoR1
    docker:
      - image: circleci/ruby:2.5.0-node
        environment:
          RAILS_ENV: test
          BASTION_HOST: 13.231.95.80
          BASTION_USER: ec2-user
      - image: circleci/mysql:5.7.18
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_ROOT_HOST: '%'
      - image: redis:3.2.10
      - image: circleci/node:8.9
    steps:
      - checkout
      - run: cat .circleci/ssh.config >> ~/.ssh/config
      - type: cache-restore
        key: bundle-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - type: cache-save
        key: bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle
      - run: bundle exec rails db:create
      - run: bundle exec rake db:migrate 
      - run: yarn install
      - type: shell
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - type: store_test_results
        path: /tmp/test-results
      - add_ssh_keys:
          fingerprints:
            - "80:2d:a6:b8:db:95:4a:da:97:58:60:a4:8c:cb:57:24"
      - deploy:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              VIA_BASTION=1 bundle exec cap staging deploy
            fi

